import store from './store'
import { router, server } from './api'
import { slotsDB } from './db'

import i18next from 'i18next'
import Fetch from 'i18next-fetch-backend';
import LanguageDetector from 'i18next-browser-languagedetector'

class {
  onCreate() {
    this.state = {
      isLoading: true,
    }
    let pending = 0
    let loadStep = () => {
      pending--
      if (pending <= 0) {
        this.state.isLoading = false
      }
    }

    // DB Setup
    pending++
    slotsDB.keys().then(keys => {
      loadStep()
    }).catch(e => {
      console.log(e)
    })

    // Internationalization Setup
    pending++
    i18next
    .use(Fetch)
    .use(LanguageDetector)
    .init({
      fallbackLng: ['en'],
      debug: true,
      preload: ['en'],
      keySeparator: false,
      ns: ['menu'],
      backend: {
        loadPath: '/locales/{{lng}}/{{ns}}.json',
      },
      detection: {
      }
    }, (err, t) => {
      // TODO: refresh UI
      loadStep()
    })

    server.use(router)
  }
  onMount() {
    store.subscribe(() => {
      this.forceUpdate()
    })
  }
}

style {
  @font-face {
    font-family: 'Abel-Regular';
    src: url('/fonts/Abel-Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
  }
  body {
    color: white;
    font-size: 5vmin;
    overflow: hidden;
  }
  body, input, textarea, button {
    font-family: 'Abel-Regular';
    font-weight: bold;
  }
  input {
    font-size: 1em;
    padding: .5em;
  }
  button {
    font-size: 1em;
    padding: .5em;
    margin: .5em;
    color: white;
    text-shadow: 0 0 1em blue;
    box-shadow: 0 0 .1em white;
    background: rgba(0, 0, 0, 0.75);
  }
  .speen {
    position: absolute;
    left: 50%;
    top: 50%;
    margin-left: -10vmin;
    margin-top: -10vmin;
    width: 20vmin;
    height: 20vmin;
    border: .5em solid white;
    border-bottom: 0;
    border-left: 0;
    border-right: 0;
    text-shadow: 0 0 .5em blue;
    border-radius: 5em;
    animation: 2s infinite linear speen;
  }
  @keyframes speen {
    100% {
      transform: rotate(360deg);
    }
  }
}

if(state.isLoading)
  div.speen
else-if(store.getState().game.inGame)
  Game ...store.getState()
else
  Menu